---
import Layout from "../layouts/Layout.astro";
---

<Layout>
  <div class="shader-container">
    <canvas id="game-canvas"></canvas>
  </div>

  <div class="content">
    <div class="list">
      <p class="headingMd">
        I'm a software developer. I enjoy working in rust, python and js.
      </p>
      <p class="headingMd pt-4">
        I like to build full-stack applications using rust, including games,
        websites, desktop apps, languages and more.
      </p>
      <p class="headingMd pt-4">
        I'm open to new projects, feel free to reach out to me on <a
          href="https://x.com/jeremyarde">twitter</a
        >,
        <a href="mailto:jere.arde@gmail.com">email</a> or <a
          href="https://www.linkedin.com/in/j-arde/">linkedin</a
        >.
      </p>
      <p class="headingMd pt-4">
        Browse my <a href="https://github.com/jeremyarde">github</a>.
      </p>
    </div>
  </div>
</Layout>

<style>
  .shader-container {
    position: fixed;
    max-width: 44rem;
    /* max-height: 720px; */
    border: 1px solid #000;
    /* top: 35%; */
    /* top: 300px; */
    padding-top: 100px;
    left: 50%;
    transform: translate(-50%, -50%); /* Center the container */
    /* width: 100%;
    height: 100%; */
    z-index: 0;
    overflow: hidden;
    pointer-events: auto !important; /* Force pointer events */
  }

  #game-canvas {
    width: 100%;
    height: 100%;
    display: block;
    pointer-events: auto !important; /* Force pointer events */
  }

  /* Content styles */
  .content {
    background: transparent;
    position: relative;
    z-index: 1;
    border-radius: 8px;
    padding: 20px;
    margin: 20px;
    pointer-events: none;
  }

  /* But allow pointer events on links and interactive elements */
  .content a,
  .content button,
  .content input,
  .content textarea,
  .content select {
    pointer-events: auto !important; /* Force pointer events */
  }
</style>

<script>
  // Add the home-page class to the body on the home page
  document.body.classList.add("home-page");

  // Remove the class when navigating away
  document.addEventListener("astro:before-preparation", () => {
    document.body.classList.remove("home-page");
  });

  // Import the initialization function
  import init from "../scripts/shaders.js";

  // Function to track mouse position for the shader
  function setupMouseTracking() {
    document.addEventListener("mousemove", (event) => {
      try {
        // @ts-ignore
        if (window.wasm && typeof window.wasm.setMousePosition === "function") {
          // @ts-ignore
          window.wasm.setMousePosition(event.clientX, event.clientY);
        }
      } catch (err) {
        // Silently ignore errors
      }
    });
  }

  // Run the initialization only in the browser
  document.addEventListener("DOMContentLoaded", async () => {
    try {
      // Initialize WebGPU shader
      let path = "/personal-site-2025/shaders_bg.wasm";
      if (!import.meta.env.DEV) {
        path = "/shaders_bg.wasm";
      }
      const wasmModule = await init(path);
      // @ts-ignore
      window.wasm = wasmModule; // Store for access in event handlers
      console.log("WASM initialized successfully!");

      // Set up mouse tracking
      setupMouseTracking();
    } catch (err) {
      console.error("Failed to load WASM:", err);
    }
  });
</script>
